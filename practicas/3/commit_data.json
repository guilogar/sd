{
    "repo_name": "guilogar/sd", 
    "branch_name": "master", 
    "commiter": {
        "login": "guille31794", 
        "id": 26124768, 
        "node_id": "MDQ6VXNlcjI2MTI0NzY4", 
        "avatar_url": "https://avatars0.githubusercontent.com/u/26124768?v=4", 
        "gravatar_id": "", "url": "https://api.github.com/users/guille31794", 
        "html_url": "https://github.com/guille31794",
        "followers_url": "https://api.github.com/users/guille31794/followers", 
        "following_url": "https://api.github.com/users/guille31794/following{/other_user}", 
        "gists_url": "https://api.github.com/users/guille31794/gists{/gist_id}", 
        "starred_url": "https://api.github.com/users/guille31794/starred{/owner}{/repo}", 
        "subscriptions_url": "https://api.github.com/users/guille31794/subscriptions", 
        "organizations_url": "https://api.github.com/users/guille31794/orgs", 
        "repos_url": "https://api.github.com/users/guille31794/repos", 
        "events_url": "https://api.github.com/users/guille31794/events{/privacy}", 
        "received_events_url": "https://api.github.com/users/guille31794/received_events", 
        "type": "User", 
        "site_admin": false
        }, 
        "date": "2019-04-26T07:54:12Z", 
        "html_url": "https://github.com/guilogar/sd/commit/30e33ec4c4caf185caea66868d222ac622959741", 
        "files": [{
            "sha": "4531c89357f8d1a4870ad5369e46a4dd65e3f3b4", 
            "filename": "practicas/3/consuming.py", 
            "status": "modified", 
            "additions": 21, 
            "deletions": 10, 
            "changes": 31, 
            "blob_url": "https://github.com/guilogar/sd/blob/30e33ec4c4caf185caea66868d222ac622959741/practicas/3/consuming.py",

            //Esto es a lo que deberías hacer un curl y sacar los ficheros en texto. Piensa que en este ejemplo
            //solo he modificado un archivo, pero en un commit real puedo hacerlo con varios, así que tenlo en cuenta cuando vayas
            // a hacer el guardado de ficheros. 
            "raw_url": "https://github.com/guilogar/sd/raw/30e33ec4c4caf185caea66868d222ac622959741/practicas/3/consuming.py", 
            "contents_url": "https://api.github.com/repos/guilogar/sd/contents/practicas/3/consuming.py?ref=30e33ec4c4caf185caea66868d222ac622959741", 
            "patch": "@@ -23,31 +23,42 @@\n \n #Here I receive the message from rabbit    \n def on_consuming(channel, method, properties, body):\n+\n     #Storage data and dump it from json\n-    type(body);\n-    print(\"\\n\\n\");\n+    print(type(body))\n+    print(\"\\n\\n\")\n     commit_data = json.loads(body)\n+\n     #Queues have to confirm message delivery\n     channel.basic_ack(delivery_tag=method.delivery_tag)\n+\n     #Consumers needs to be closed or they'll be iterating forever\n     channel.cancel()\n-    type(commit_data);\n-    print(\"\\n\\n\");\n-    print(commit_data);\n-    #on_twitter_publishing(commit_data)\n-    #on_dropbox_storing(commit_data) #Function for Teodoro\n-    #on_drive_storing(commit_data)\n+\n+    print(type(commit_data))\n+    with open('commit_data.json', 'w') as outfile:\n+        json.dump(commit_data, outfile)\n+\n+    #Filtering data to \n+    if(credentials['github']['REPO_1'] or credentials['github']['REPO_2'] in commit_data['repo_name']):\n+        if(commit_data['commiter']['login'] == credentials['github']['REPO_1'] or credentials['github']['REPO_2']\n+        or credentials['github']['REPO_3']):\n+            #on_twitter_publishing(commit_data['repo_name'], commit_data['commiter']['login'], \n+            #commit_data['html_url'])\n+            #on_dropbox_storing(commit_data) #Function for Teodoro\n+            #on_drive_storing(commit_data)\n+            pass\n \n def on_twitter_publishing(data):\n     #url = urllib.parse.quote_plus(data['url'])\n     status = apiTwitter.PostUpdate(status='New Commit from: ' + 'commiter' +  ' on: ' + 'repoName' + \n     ' follow link to discover the changes ' + 'repoURL')\n \n def on_dropbox_storing(data): #Complete these functions, Teo\n-    pass;\n+    pass\n \n def on_drive_storing(data):\n-    pass;\n+    pass\n \n #Rabbitmq connection\n parameters = pika.ConnectionParameters('localhost')"
            }]}